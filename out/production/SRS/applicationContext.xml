<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			            http://www.springframework.org/schema/context
			            http://www.springframework.org/schema/context/spring-context-4.3.xsd
			            http://www.springframework.org/schema/mvc
			            http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
			            http://www.springframework.org/schema/tx
			            http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
			            http://mybatis.org/schema/mybatis-spring 
			            http://mybatis.org/schema/mybatis-spring.xsd 
			            http://www.springframework.org/schema/task 
			            http://www.springframework.org/schema/task/spring-task-4.1.xsd">
		
    <!-- 配置spring定时器 -->
    <context:annotation-config />
	<task:annotation-driven />	      
	<!-- mybatis:scan会扫描org.fkit.dao包里的所有接口当作Spring的bean配置，之后可以进行依赖注入-->  
    <mybatis:scan base-package="com.github.lpfcumt.SRS.dao"/>   
       
	<!-- 扫描org.fkit包下面的java文件，有Spring的相关注解的类，则把这些类注册为Spring的bean -->
    <context:component-scan base-package="com.github.lpfcumt.SRS"/>
    
	 
	<!-- 配置c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"/>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.github.lpfcumt.SRS.dao" />
    </bean>
    
	<!--配置springemail  -->
	<!-- 引入配置文件 -->
	<!--   <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:spring-email.properties" />  
	    </bean> 
		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	        <property name="host" value="smtp.vip.sina.com" />
	        <property name="port" value="25" />
	        <property name="username" value="${mail_username}"/>
	        <property name="password" value="${mail_password}" />
	        <property name="defaultEncoding" value="UTF-8"></property>  
	        <property name="javaMailProperties">
	            <props>
	                <prop key="mail.smtp.auth">true</prop>
	                <prop key="mail.smtp.timeout">0</prop>
	            </props>
	        </property>
    </bean> -->
	
	<bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	  <property name="properties">
	    <props>
	      <prop key="SQL Server">sqlserver</prop>
	      <prop key="DB2">db2</prop>
	      <prop key="SQLite">sqlite</prop>
	      <prop key="SQLite">oracle</prop>
	      <prop key="MySQL">mysql</prop>
	      <prop key="H2">h2</prop>
	    </props>
	  </property>
	</bean>
	
	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
	  <property name="properties" ref="vendorProperties"/>
	</bean>
	<!-- 配置SqlSessionFactory，org.mybatis.spring.SqlSessionFactoryBean是Mybatis社区开发用于整合Spring的bean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="databaseIdProvider" ref="databaseIdProvider" />
        <property name="mapperLocations" value="classpath*:/com/github/lpfcumt/SRS/mapper/**/*.xml" />
        <property name="plugins">
			<list>
				<bean class="com.github.pagehelper.PageInterceptor">
					<!-- 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 -->
					<property name="properties">
						<value>
							helperDialect=mysql
							reasonable=true
							supportMethodsArguments=true
							returnPageInfo=check
							params=count=countSql
						</value>
					</property>
				</bean>
			</list>
		</property>
    </bean>
	<!-- JDBC事务管理器 -->
	<bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
	
	<!-- 启用支持annotation注解方式事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- 加载mysql数据源 -->
	<beans profile="mysql">
       <!-- 使用PropertyOverrideConfigurer后处理器加载数据源参数 -->
		<context:property-override location="classpath*:mysql-db.properties"/>
    </beans>
<!--     加载sqlite数据源 -->
<!-- 	<beans profile="sqlite">
&lt;!&ndash;        使用PropertyOverrideConfigurer后处理器加载数据源参数 &ndash;&gt;
 		<context:property-override location="classpath*:sqlite-db.properties"/> 
     </beans>
    -->
	
</beans>